version: "3"

# Define named volumes at the top level
volumes:
  catkin_ws_build:
  libfranka_build:

services:
  build_ws:
    build: .
    volumes:
      - ./ros:/catkin_ws/src/ros
      - ./ros/src/franka_ros:/catkin_ws/src/franka_ros
      - ./build_workspace.sh:/build_workspace.sh
      - catkin_ws_build:/catkin_ws/build
      - catkin_ws_build:/catkin_ws/devel
    command: >
      bash -c "
        chmod +x /build_workspace.sh &&
        /build_workspace.sh
      "

  roscore:
    build: .
    network_mode: host
    privileged: true
    stdin_open: true
    tty: true
    volumes:
      - ./ros/src/franka_ros:/catkin_ws/src/franka_ros
      - catkin_ws_build:/catkin_ws/build
      - catkin_ws_build:/catkin_ws/devel
    depends_on:
      build_ws:
        condition: service_completed_successfully
    command: roscore

  rosbridge:
    build: .
    network_mode: host
    privileged: true
    stdin_open: true
    tty: true
    volumes:
      - ./ros/src/franka_ros:/catkin_ws/src/franka_ros
      - catkin_ws_build:/catkin_ws/build
      - catkin_ws_build:/catkin_ws/devel
    depends_on:
      build_ws:
        condition: service_completed_successfully
      roscore:
        condition: service_started
    command: /bin/bash -c '. /catkin_ws/devel/setup.bash && roslaunch --wait rosbridge_server rosbridge_websocket.launch'

  cartesian_impedance_control:
    build: .
    environment:
      - DISPLAY=${DISPLAY}
      - GAZEBO_MODEL_PATH=/catkin_ws/src/franka_ros/franka_description/robots
      - FCI_IP=${FCI_IP}
      - LD_LIBRARY_PATH=/usr/local/lib:$LD_LIBRARY_PATH
    volumes:
      - /tmp/.X11-unix:/tmp/.X11-unix
      - ./ros/src/franka_ros:/catkin_ws/src/franka_ros
      - catkin_ws_build:/catkin_ws/build
      - catkin_ws_build:/catkin_ws/devel
      - .:/app
      - /app/.venv
    network_mode: host
    privileged: true
    stdin_open: true
    tty: true
    depends_on:
      build_ws:
        condition: service_completed_successfully
      roscore:
        condition: service_started
    command: /bin/bash -c '. /catkin_ws/devel/setup.bash && roslaunch --wait franka_example_controllers cartesian_impedance_example_controller_no_marker.launch robot:=panda load_gripper:=True robot_ip:=${FCI_IP}'

  main:
    build: .
    environment:
      - DISPLAY=${DISPLAY}
    volumes:
      - /tmp/.X11-unix:/tmp/.X11-unix
      - ./ros:/catkin_ws/src/ros
      - ./ros/src/franka_ros:/catkin_ws/src/franka_ros
      - ./build_workspace.sh:/build_workspace.sh
      - catkin_ws_build:/catkin_ws/build
      - catkin_ws_build:/catkin_ws/devel
      - .:/app
      - /app/.venv
    ports:
      - "8000:8000"
    network_mode: host
    privileged: true
    stdin_open: true
    tty: true
    depends_on:
      build_ws:
        condition: service_completed_successfully
      roscore:
        condition: service_started
      rosbridge:
        condition: service_started
    develop:
      watch:
        - action: sync
          path: .
          target: /app
          ignore:
            - .venv/
        - action: rebuild
          path: ./uv.lock
    command: bash
